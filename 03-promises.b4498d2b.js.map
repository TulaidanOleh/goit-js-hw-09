{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAkBC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACrCU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAC1DJ,EAAAiB,OAAOC,QAAQ,uBAAwCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAE/D,SAASe,EAAiBN,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACpCU,QAAQC,IAAI,sBAAuCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OACzDJ,EAAAiB,OAAOG,QAAQ,sBAAqCJ,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CA/C/CiB,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EA4CR,SAAoCC,GAClC,IAAMD,EAAc,GAIpB,OAHAC,EACGC,iBAAiB,eACjBC,SAAQ,SAAAC,G,OAAOJ,EAAYI,EAAGC,MAAQJ,EAAKK,SAASF,EAAGC,MAAME,K,IACzDP,C,CAjDaQ,CAA2BV,EAAEW,QAEjD,GAkDsBC,EAlDFV,EAmDhBW,GAAQ,EACZC,OAAOC,OAAOH,GAAKP,SAAQ,SAAAI,GACzB,GAAIA,EAAQ,EAGV,OAFAjC,EAAAiB,OAAOG,QAAQ,2BACfiB,GAAQ,E,KAILA,EA1DL,OAiDJ,IAAwBD,EAClBC,EA/CJvB,QAAQ0B,QACR1B,QAAQC,IAAI,oBAAqBW,GAMjC,IAJA,IAAItB,EAAQqC,OAAOf,EAAYtB,OACzBsC,EAAOD,OAAOf,EAAYgB,MAC1BC,EAASF,OAAOf,EAAYiB,QAEzBxC,EAAW,EAAGA,GAAYwC,EAAQxC,GAAY,EACrDD,EAAcC,EAAUC,GACrBwC,KAAKhC,GACLiC,MAAM1B,GACTf,GAASsC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const fieldValues = getValuesObjFromFormFields(e.target);\n\n  if (!validateValues(fieldValues)) {\n    return;\n  }\n\n  console.clear();\n  console.log('Form fields data:', fieldValues);\n\n  let delay = Number(fieldValues.delay);\n  const step = Number(fieldValues.step);\n  const amount = Number(fieldValues.amount);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(onPropmiseResolve)\n      .catch(onPropmiseReject);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPropmiseResolve({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onPropmiseReject({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction getValuesObjFromFormFields(form) {\n  const fieldValues = {};\n  form\n    .querySelectorAll('input[name]')\n    .forEach(el => (fieldValues[el.name] = form.elements[el.name].value));\n  return fieldValues;\n}\n\nfunction validateValues(obj) {\n  let valid = true;\n  Object.values(obj).forEach(value => {\n    if (value < 0) {\n      Notify.failure('Values must be > 0');\n      valid = false;\n      return;\n    }\n  });\n  return valid;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onPropmiseResolve","param","console","log","concat","Notify","success","$ce04d3a99e08e73b$var$onPropmiseReject","failure","document","querySelector","addEventListener","e","preventDefault","fieldValues","form1","querySelectorAll","forEach","el","name","elements","value","$ce04d3a99e08e73b$var$getValuesObjFromFormFields","target","obj","valid","Object","values","clear","Number","step","amount","then","catch"],"version":3,"file":"03-promises.b4498d2b.js.map"}